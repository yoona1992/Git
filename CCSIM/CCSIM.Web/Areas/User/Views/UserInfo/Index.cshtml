

@{
    ViewBag.SourceFiles = "~/Models/UserInfoModel.cs";
    ViewBag.Title = "GridPaging/UserInfo";
    var F = Html.F();
}

@model CCSIM.Web.Models.UserInfoModel

@F.PageManager.AutoSizePanelID("UserGrid")

@section body {

    @(F.Panel()
        .Layout(LayoutType.Fit)
        .ShowHeader(false)
        .ShowBorder(false)
        .Items(
            F.Grid()
                .EnableCheckBoxSelect(true)
                .AutoScroll(true)
                .ShowHeader(false)
                .ShowBorder(false)
        .ID("UserGrid")
        .DataIDField("Id")
        .DataTextField("Name")
        .AllowPaging(true)
        .PageSize(20)
        .IsDatabasePaging(true)
        .OnPageIndexChanged(Url.Action("UserGrid_PageIndexChanged"), "UserGrid",
                                new Parameter("userName", "F.ui.tbxUserName.getValue()"),
                                new Parameter("telephone", "F.ui.tbxTelephone.getValue()"),
                                new Parameter("userType", "F.ui.ddlistUserType.getValue()"))
                .BodyPadding(0)
                .Toolbars(
                    F.Toolbar().ID("Toolbar1").ToolbarAlign(ToolbarAlign.Left)
                        .Items(
                            F.TextBox().Width(300).LabelWidth(60).LabelAlign(LabelAlign.Right).Label("姓名").EmptyText("请输入姓名").ID("tbxUserName"),
                            F.TextBox().Width(300).LabelWidth(80).LabelAlign(LabelAlign.Right).Label("联系电话").EmptyText("请输入联系电话").ID("tbxTelephone"), 
                            F.DropDownListFor(m => m.userType.DropDownList).Width(220).LabelWidth(80).ID("ddlistUserType").LabelAlign(LabelAlign.Right).Label("人员类型").EmptyText("请选择人员类型").EnableEdit(false)
                                        .ShowRedStar(false).SelectedValue("-1").Items(Model.userType.DropDownListItem.ToArray()),
                            F.ToolbarSeparator(),
                            F.Button().ID("btnSearch").Text("查询").Icon(Icon.SystemSearch).OnClick(Url.Action("btnSearch_Click"),
                                "UserGrid",
                                new Parameter("userName", "F.ui.tbxUserName.getValue()"),
                                new Parameter("telephone", "F.ui.tbxTelephone.getValue()"),
                                new Parameter("userType", "F.ui.ddlistUserType.getValue()")),
                            F.ToolbarFill().ID("ToolbarFill1"),
                            F.Button().ID("btnAdd").Text("新增").Icon(Icon.Add).Listener("click", "onbtnAddClick"),
                            F.Button().ID("btnDelete").Text("删除").Icon(Icon.Delete).Listener("click", "onbtnDeleteClick")
                         )
                )
        .Columns(
            F.RowNumberField(),
            F.RenderField()
                .HeaderText("姓名")
                .DataField("Name")
                .Width(100),
            F.RenderField()
                .HeaderText("性别")
                .DataField("SexName")
                .Width(100),
            F.RenderField()
                .HeaderText("人员类型")
                .DataField("UserTypeName")
                .Width(100),
            F.RenderField()
                .HeaderText("联系电话")
                .DataField("Telephone")
                .Width(150),
            F.RenderField()
                .HeaderText("证件号码")
                .DataField("CertificateNum")
                .Width(170),
            F.RenderField()
                .HeaderText("家庭地址")
                .DataField("Address")
                .RendererFunction("renderTooltip")
                .BoxFlex(1),
            F.RenderField()
                .HeaderText("所属部门")
                .DataField("BelongDeptName")
                .RendererFunction("renderTooltip")
                .Width(200),
            F.RenderField()
                .HeaderText("所属网格")
                .DataField("BelongNetName")
                .RendererFunction("renderTooltip")
                .BoxFlex(1),
            F.RenderField()
                .HeaderText("操作")
                .EnableHeaderMenu(false)
                .RendererFunction("renderActionField")
                .TextAlign(TextAlign.Center)
                .Width(80)
        )
        .RecordCount(ViewBag.Grid1RecordCount)
        .DataSource(ViewBag.Grid1DataSource)
        .ShowPagingMessage(true)

    )
    )

    @(F.Window().Hidden(true).Height(470).Width(750).IsModal(true).OnClose(Url.Action("Window1_Close")).Target(Target.Top).EnableResize(true).EnableMaximize(true).EnableIFrame(true).Title("新增").ID("Window1"))
    @(F.Window().Hidden(true).Height(470).Width(750).IsModal(true).OnClose(Url.Action("Window2_Close")).Target(Target.Top).EnableResize(true).EnableMaximize(true).EnableIFrame(true).Title("编辑").ID("Window2"))

}


@section script {

    <script src="~/res/js/grid.js"></script>
    <script>
        // 打开窗体
        function onbtnAddClick(event) {
            var iframeWindowUrl = '@Url.Content("~/User/UserInfo/Add")';
            var iframeUrl = iframeWindowUrl;

            // 显示窗体
            F.ui.Window1.show(iframeUrl, '新增 - ' + '用户');
        }

        //删除事件
        function onbtnDeleteClick(event) {
            var grid = F.ui.UserGrid;
            if (!grid.hasSelection()) {
                F.alert('没有选中项!');
                return;
            }

            var selectedRows = grid.getSelectedRows();
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗?',
                target: '_top',
                ok: function () {
                    deletedRows(selectedRows);
                }
            })
        }

        //删除数据
        function deletedRows(selectedRows) {
            //触发后台事件
            F.doPostBack('@Url.Action("DeleteRows")', "UserGrid", {
                selectedRows: selectedRows,
                userName: F.ui.tbxUserName.getValue(),
                telephone: F.ui.tbxTelephone.getValue(),
                userType: F.ui.ddlistUserType.getValue()
            });
        }

        //重新加载Grid
        function reload() {
            $('#btnSearch').click();
        }

        // 打开窗体
        function openWindow(rowData) {
            var iframeWindowUrl = '@Url.Content("~/User/UserInfo/Edit")';
            var iframeUrl = iframeWindowUrl + '?id=' + rowData.id;

            // 显示窗体
            F.ui.Window2.show(iframeUrl, '编辑 - ' + '用户');
        }

        F.ready(function () {

            var grid = F.ui.UserGrid;

            // 点击表格行中的编辑按钮
            grid.el.on('click', 'a.editfield', function (event) {
                var rowEl = $(this).closest('.f-grid-row');
                var rowData = grid.getRowData(rowEl);

                openWindow(rowData);
            });

        });
    </script>
}


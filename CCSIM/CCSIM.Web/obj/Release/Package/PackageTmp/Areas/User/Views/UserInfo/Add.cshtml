
@{
    ViewBag.SourceFiles = "~/Models/UserInfoModel.cs";
    ViewBag.Title = "FormLayout/LayoutUserInfoAdd";
    var F = Html.F();
}

@model CCSIM.Web.Models.UserInfoModel

@section body {

    @(F.Form().ID("Form_UserAdd").LabelAlign(LabelAlign.Top).BodyPadding(10).ShowBorder(false).ShowHeader(false).LabelAlign(LabelAlign.Right).IsViewPort(true)
    .Items(
   F.Panel().Layout(LayoutType.HBox).BoxConfigAlign(BoxLayoutAlign.Stretch).ShowHeader(false).ShowBorder(false)
                                .Items(
                                    F.TextBox().ID("Name").Required(true).ShowLabel(true).Label("<span style='color:red'>*</span>姓名").BoxFlex(1),
                                    F.DropDownListFor(m => m.sex.DropDownList).ID("Sex").Required(true).ShowLabel(true).ShowRedStar(false).Label("<span style='color:red'>*</span>性别").AutoSelectFirstItem(false).EmptyText("请选择性别")
                                        .Items(Model.sex.DropDownListItem.ToArray()).BoxFlex(1)
                                ),
   F.Panel().Layout(LayoutType.HBox).BoxConfigAlign(BoxLayoutAlign.Stretch).ShowHeader(false).ShowBorder(false)
                                .Items(
                                    F.TextBox().ID("UserName").Required(true).ShowLabel(true).Label("<span style='color:red'>*</span>用户名").BoxFlex(1),
                                    F.TextBox().ID("UserPwd").Required(true).ShowLabel(true).TextMode(TextMode.Password).Label("<span style='color:red'>*</span>密码").BoxFlex(1)
                                ),
   F.Panel().Layout(LayoutType.HBox).BoxConfigAlign(BoxLayoutAlign.Stretch).ShowHeader(false).ShowBorder(false)
                                .Items(
                                    F.TextBox().ID("Age").ShowLabel(true).Label("年龄").BoxFlex(1),
                                    F.TextBox().ID("Telephone").Required(true).ShowLabel(true).Label("<span style='color:red'>*</span>联系电话").BoxFlex(1)
                                ),
   F.Panel().Layout(LayoutType.HBox).BoxConfigAlign(BoxLayoutAlign.Stretch).ShowHeader(false).ShowBorder(false)
                                .Items(
                                    F.DropDownListFor(m => m.certificateType.DropDownList).ID("CertificateType").Required(true).ShowLabel(true).ShowRedStar(false).Label("<span style='color:red'>*</span>证件类型").AutoSelectFirstItem(false).EmptyText("请选择证件类型")
                                        .Items(Model.certificateType.DropDownListItem.ToArray()).BoxFlex(1),
                                    F.TextBox().ID("CertificateNum").Required(true).ShowLabel(true).Label("<span style='color:red'>*</span>证件号码").BoxFlex(1)
                                ),
   F.Panel().Layout(LayoutType.HBox).BoxConfigAlign(BoxLayoutAlign.Stretch).ShowHeader(false).ShowBorder(false)
                                .Items(
                                    F.DropDownListFor(m => m.belongDept.DropDownList).ID("BelongDeptId").Required(true).ShowLabel(true).ShowRedStar(false).Label("<span style='color:red'>*</span>所属部门").AutoSelectFirstItem(false).EmptyText("请选择所属部门")
                                        .Items(Model.belongDept.DropDownListItem.ToArray()).BoxFlex(1),
                                    F.DropDownListFor(m => m.belongNet.DropDownList).ID("BelongNetId").Required(false).ShowLabel(true).ShowRedStar(false).Label("所属网格").AutoSelectFirstItem(false).EmptyText("请选择所属网格")
                                        .Items(Model.belongNet.DropDownListItem.ToArray()).BoxFlex(1)
                                ),
   F.Panel().Layout(LayoutType.HBox).BoxConfigAlign(BoxLayoutAlign.Stretch).ShowHeader(false).ShowBorder(false)
                                .Items(
                                    F.DropDownListFor(m => m.userType.DropDownList).ID("UserType").Required(true).ShowLabel(true).ShowRedStar(false).Label("<span style='color:red'>*</span>人员类型").AutoSelectFirstItem(false).EmptyText("请选择人员类型")
                                        .Items(Model.userType.DropDownListItem.ToArray()).BoxFlex(1),
                                    F.DropDownListFor(m => m.loginType.DropDownList).ID("LoginType").Required(true).ShowLabel(true).ShowRedStar(false).Label("<span style='color:red'>*</span>登录类型").AutoSelectFirstItem(false).EmptyText("请选择登录类型")
                                        .Items(Model.loginType.DropDownListItem.ToArray()).BoxFlex(1)
                                ),
    F.TextBox().ID("VirtualTrumpet").Label("虚拟短号"),
    F.TextBox().ID("Direction").Label("去向"),
    F.TextBox().ID("Address").Label("家庭地址"),
    F.TextArea().ID("Remark").Height(160).Label("备注")
    )
    .Toolbars(
    F.Toolbar().ID("Toolbar").ToolbarAlign(ToolbarAlign.Right).Position(ToolbarPosition.Bottom)
    .Items(
    F.Button().ID("btnAdd").Text("新增").IconFont(IconFont._Save).OnClick(Url.Action("btnAdd_Click"), "Form_UserAdd").ValidateForms("Form_UserAdd"),
    F.Button().Type(ButtonType.Reset).ID("btnReset").Text("重置").IconFont(IconFont._Refresh)
    )
    )
    )
}


@section script {
    <script src="~/res/js/grid.js"></script>
}


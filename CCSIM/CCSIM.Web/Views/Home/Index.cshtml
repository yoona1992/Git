@{
    ViewBag.Title = "首页";
    var F = @Html.F();
}

@section head {

    <link type="text/css" rel="stylesheet" href="~/res/css/index.css" />
    <style>
        .red {
            background-color: red;
        }
    </style>

}

@section body {

    <div id="header" class="ui-widget-header f-mainheader">
        <table>
            <tr>
                <td>
                    @(F.Button()
                        //.OnClientClick("window.open('','_blank');")
                        .EnableDefaultCorner(false)
                        .EnableDefaultState(false)
                        .IconFont(IconFont._Home)
                        .IconAlign(IconAlign.Top)
                        //.ToolTip("官网首页")
                        .ID("btnHomePage")
                        .CssClass("icononlyaction")
                    )
                    <a class="logo">
                        指挥中心平台
                    </a>

                </td>
                <td style="text-align: right;">
                    @(F.Button()
                .EnableDefaultCorner(false)
                .EnableDefaultState(false)
                .IconAlign(IconAlign.Top)
                .IconFont(IconFont.Bell)
                .Text("数据管理")
                .CssClass("icontopaction themes")
                .Menu(F.Menu()
                    .Items(
                        F.MenuButton()
                            .IconFont(IconFont.Database)
                            .Text("轨迹数据查询")
                            .Listener("click", "addTap('/Trajectory/Trajectory','trajectoryData','轨迹数据查询');"),
                        F.MenuSeparator(),
                        F.MenuButton()
                            .IconFont(IconFont.Bell)
                            .Text("报警数据管理")
                            .Listener("click", "addTap('/AlarmInfo/AlarmInfo','alarmInfo','报警数据管理');"),
                        F.MenuSeparator(),
                        F.MenuButton()
                            .IconFont(IconFont._Mail)
                            .Text("资料数据管理")
                            .Listener("click", "addTap('/Message/Message','message','资料数据管理');"),
                        F.MenuSeparator(),
                        F.MenuButton()
                            .IconFont(IconFont._Info)
                            .Text("通知数据管理")
                            .Listener("click", "addTap('/Notification/Notification','notification','通知数据管理');")
                    )
                )
                    )
                    @(F.Button()
                .EnableDefaultCorner(false)
                .EnableDefaultState(false)
                .IconAlign(IconAlign.Top)
                .IconFont(IconFont.Database)
                .Text("数据配置")
                .CssClass("icontopaction themes")
                .Menu(F.Menu()
                    .Items(
                        F.MenuButton()
                            .IconFont(IconFont.Spinner)
                            .Text("网格管理")
                            .Listener("click", "addTap('/NetArea/NetArea','netarea','网格管理');"),
                        F.MenuSeparator(),
                        F.MenuButton()
                            .IconFont(IconFont._User)
                            .Text("人员管理")
                            .Listener("click", "addTap('/User/UserInfo','userinfo','人员管理');"),
                        F.MenuSeparator(),
                        F.MenuButton()
                            .IconFont(IconFont.Car)
                            .Text("车辆管理")
                            .Listener("click", "addTap('/Car/CarInfo','carinfo','车辆管理');")
                    )
                )
                    )
                    @(F.Button()
                .EnableDefaultCorner(false)
                .EnableDefaultState(false)
                .IconAlign(IconAlign.Top)
                .IconFont(IconFont.Database)
                .Text("下载管理")
                .CssClass("icontopaction themes")
                .Menu(F.Menu()
                    .Items(
                        F.MenuButton()
                            .IconFont(IconFont.Download)
                            .Text("移动APP下载")
                            .Listener("click", "addTap('/AppDownload/AppDownload','appDownload','移动APP下载');"),
                        F.MenuSeparator(),
                        F.MenuButton()
                            .IconFont(IconFont.Download)
                            .Text("文件管理")
                            .Listener("click", "addTap('/FileManage/FileManage','fileManage','文件管理');")
                    )
                )
                    )

                    @(F.Button()
                .EnableDefaultCorner(false)
                .EnableDefaultState(false)
                .IconAlign(IconAlign.Left)
                .IconUrl(Url.Content("~/res/images/i/Police.png"))
                .CssClass("userpicaction")
                    )
                </td>
            </tr>
        </table>
    </div>

    <div id="maincontent ">

    </div>

    @(F.RegionPanel()
        .ID("RegionPanel1")
        .ShowBorder(false)
        .IsViewPort(true)
        .CssClass("mainpanel")
        .Regions(
            F.Region()
                .ID("Region1")
                .ShowBorder(false)
                .ShowHeader(false)
                .RegionPosition(Position.Top)
                .CssClass("topregion bgpanel")
                .Layout(LayoutType.Fit)
                .ContentEl("#header"),
            F.Region()
                .ID("mainRegion")
                .ShowHeader(false)
                .Layout(LayoutType.Fit)
                .RegionPosition(Position.Center)
                .CssClass("centerregion")
                .Items(
                    F.TabStrip()
                        .ID("mainTabStrip")
                        .Layout(LayoutType.Fit)
                        .EnableTabCloseMenu(true)
                        .ShowBorder(false)
                        .Tabs(
                        F.Tab()
                            .ID("Tab2")
                            .Title("电子地图")
                            .Layout(LayoutType.Fit)
                            .Icon(Icon.Map)
                            .EnableIFrame(true)
                            .IFrameUrl("/Home/Map")
                        )
                )
        )
    )
}

@section script {

    <script>
        // 点击主题仓库
        function onThemeSelectClick(event) {
            F.ui.windowThemeRoller.show();
        }
        function addTap(url, id, title, icon) {
            var tapIcon = '@Url.Content("~/res/icon/map.png")';
            switch (id) {
                case "userinfo":
                    tapIcon = '@Url.Content("~/res/icon/user.png")';
                    break;
                case "carinfo":
                    tapIcon = '@Url.Content("~/res/icon/car.png")';
                    break;
                case "trajectoryData":
                    tapIcon = '@Url.Content("~/res/icon/database.png")';
                    break;
                case "netarea":
                    tapIcon = '@Url.Content("~/res/icon/table_cell.png")';
                    break;
                case "alarmInfo":
                    tapIcon = '@Url.Content("~/res/icon/bell.png")';
                    break;
                case "message":
                    tapIcon = '@Url.Content("~/res/icon/email.png")';
                    break;
                case "notification":
                    tapIcon = '@Url.Content("~/res/icon/information.png")';
                    break;
                case "fileManage":
                    tapIcon = '@Url.Content("~/res/icon/download.png")';
                    break;
                default:
                    break;
            }
            if (id == "appDownload") {
                window.location.href = '@Url.Action("DownloadApp")';
                return false;
            }
            F.ui.mainTabStrip.addTab({
                id: id,
                iframe: true,
                iframeUrl: url,
                title: title,
                closable: true,
                icon: tapIcon
            });
        }
        // 页面控件初始化完毕后，会调用用户自定义的onReady函数
        F.ready(function () {

            if (!F.ui.treeMenu) return;


            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息
            F.initTreeTabStrip(F.ui.treeMenu, F.ui.mainTabStrip, {
                maxTabCount: 10,
                maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            });

        });


    </script>
}
